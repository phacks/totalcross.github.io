{"version":3,"sources":["webpack:///./src/components/call-to-action.module.scss","webpack:///./src/pages/code-corona-label.module.scss","webpack:///./src/components/button.js","webpack:///./src/components/code-snippets/button-corona.js","webpack:///./src/pages/code-corona-button.js"],"names":["module","exports","TCButton","props","color","text","path","href","className","styles","buttonGreen","buttonBlack","ButtonCorona","style","CodeCoronaButton","container","code","button"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,YAAc,6CAA6C,YAAc,+C,qBCA3FD,EAAOC,QAAU,CAAC,UAAY,6CAA6C,KAAO,wCAAwC,OAAS,4C,kCCDnI,+CAIMC,EAAW,SAACC,GAAW,IAAD,EAClBC,EAAsBD,EADJ,MACXE,EAAeF,EADJ,KACLG,EAASH,EADJ,KAY1B,OACE,uBACE,qBAAGI,KAAK,KAAR,UACG,UAAAH,EACC,sBAAQI,UAAWC,IAAOC,aAD3B,GAGC,sBAAQF,UAAWC,IAAOE,aANlC,MAaF,W,obC7BA,0BAEMC,EAAe,WACnB,OACE,0BAEE,oBAAMC,MAAO,CAAET,MAAO,WAFxB,qCAKE,oBAAMS,MAAO,CAAET,MAAO,aALxB,yCASE,oBAAMS,MAAO,CAAET,MAAO,SATxB,iEAaE,oBAAMS,MAAO,CAAET,MAAO,WAbxB,kBAeE,oBAAMS,MAAO,CAAET,MAAO,eAfxB,wBAkBE,oBACES,MAAO,CAAET,MAAO,SAnBpB,gGAuBE,oBAAMS,MAAO,CAAET,MAAO,WAvBxB,qBA0BE,oBAAMS,MAAO,CAAET,MAAO,WA1BxB,0CA4BE,oBAAMS,MAAO,CAAET,MAAO,eA5BxB,kFAgCE,oBAAMS,MAAO,CAAET,MAAO,eAhCxB,2BAmCE,oBAAMS,MAAO,CAAET,MAAO,WAnCxB,0HAuCE,oBAAMS,MAAO,CAAET,MAAO,eAvCxB,iFA+CE,oBAAMS,MAAO,CAAET,MAAO,mBA/CxB,cAiDE,oBAAMS,MAAO,CAAET,MAAO,mBAjDxB,iBAmDE,oBAAMS,MAAO,CAAET,MAAO,mBAnDxB,eAqDE,oBAAMS,MAAO,CAAET,MAAO,mBArDxB,QADF,iDAgEF,W,seCnEA,8EAMMU,EAAmB,WACvB,OACE,mBAAKN,UAAWC,IAAOM,WACrB,mBAAKP,UAAWC,IAAOO,MACrB,gBAFJ,OAIE,mBAAKR,UAAWC,IAAOQ,QACrB,iBAAUb,MAAV,QAAwBC,KAAxB,OAAoCC,KAAK,oBAMjD,iB","file":"component---src-pages-code-corona-button-js-57891bfc2ffa5333ca78.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"call-to-action-module--button-green--1tcEk\",\"buttonBlack\":\"call-to-action-module--button-black--3WFHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"code-corona-label-module--container--2-Zom\",\"code\":\"code-corona-label-module--code--2K9bE\",\"button\":\"code-corona-label-module--button--3t74O\"};","import React from \"react\";\n\nimport styles from \"./call-to-action.module.scss\";\n\nconst TCButton = (props) => {\n  const { color, text, path } = props;\n  const btnStyle = () => {\n    switch (color) {\n      case \"green\":\n        return \"buttonGreen\";\n      case \"black\":\n        return \"buttonBlack\";\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <a href=\"\" href={path}>\n        {color === \"green\" ? (\n          <button className={styles.buttonGreen}>{text}</button>\n        ) : (\n          <button className={styles.buttonBlack}>{text}</button>\n        )}\n      </a>\n    </div>\n  );\n};\n\nexport default TCButton;\n","import React from \"react\";\n\nconst ButtonCorona = () => {\n  return (\n    <pre>\n      {``}\n      <span style={{ color: \"orange\" }}>{`\n    @Override\n    public void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`initUI()`}</span>\n      {` {\n        \n      (...) `}\n      <span style={{ color: \"grey\" }}>{`// Adding components to UI`}</span>\n      {`\n\n      Button btnStartStop = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`Button(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n      `}\n      <span\n        style={{ color: \"grey\" }}\n      >{`// Adding listener to start or stop the animation`}</span>\n      {`\n      btnStartStop.addPressListener(e `}\n      <span style={{ color: \"orange\" }}>{`-> `}</span>\n      {`{\n        `}\n      <span style={{ color: \"orange\" }}>{`if `}</span>\n      {` (btnStartStop.getText().equals(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`)) {\n          restartAnimation();\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Stop\"`}</span>\n      {`);\n        } `}\n      <span style={{ color: \"orange\" }}>{`else `}</span>\n      {`{\n          MainWindow.getMainWindow().removeUpdateListener(updateListener);\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n        }\n      });\n\n      (...)\n\n      add(btnStartStop, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`LEFT `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`AFTER `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH);\n        \n      (...)\n      \n    }`}\n    </pre>\n  );\n};\n\nexport default ButtonCorona;\n","import React from \"react\";\nimport ButtonCorona from \"../components/code-snippets/button-corona\";\nimport TCButton from \"../components/button\";\n\nimport styles from \"./code-corona-label.module.scss\";\n\nconst CodeCoronaButton = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.code}>\n        <ButtonCorona />\n      </div>\n      <div className={styles.button}>\n        <TCButton color=\"black\" text=\"BACK\" path=\"/easy-to-use\" />\n      </div>\n    </div>\n  );\n};\n\nexport default CodeCoronaButton;\n"],"sourceRoot":""}