{"version":3,"sources":["webpack:///./src/pages/low-footprint.js","webpack:///./src/components/navbar-why-tc.js","webpack:///./src/components/navbar-why-tc.module.scss","webpack:///./src/pages/why-totalcross.js","webpack:///./src/pages/low-footprint.module.scss","webpack:///./src/components/layout-why-tc.js","webpack:///./src/components/layout-why-tc.module.scss"],"names":["LowFootprint","data","useStaticQuery","title","description","active","className","styles","row","rowTextCenter","rowImage","fluid","alt","rowImageMobile","rowTextBlock","rowTitle","rowText","NavBarWhyTC","props","menuContainer","style","paddingLeft","display","to","module","exports","WhyTC","LayoutWhyTC","children","console","container","childContainer","Layout","PropTypes","isRequired"],"mappings":"iGAAA,uIAUMA,EAAe,WACnB,IAAMC,EAAOC,YAAb,cAwCA,OACE,qBACE,iBACEC,MADF,gCAEEC,YAAY,qFAEd,qBACE,iBAAaC,OAAO,kBACpB,mBAAKC,UAAWC,IAAOC,KACrB,mBAAKF,UAAWC,IAAOE,eAH3B,qKASE,mBAAKH,UAAWC,IAAOC,KACrB,mBAAKF,UAAWC,IAAOG,UACrB,iBACEC,MAAOV,0BADT,MAEEW,IAAI,wCAGR,mBAAKN,UAAWC,IAAOM,gBACrB,iBACEF,MAAOV,iCADT,MAEEW,IAAI,wCAGR,mBAAKN,UAAWC,IAAOO,cACrB,mBAAKR,UAAWC,IAAOQ,UACrB,sBAFJ,wBAIE,mBAAKT,UAAWC,IAAOS,SAAvB,2aA1BN,OAsCE,mBAAKV,UAAWC,IAAOC,KACrB,mBAAKF,UAAWC,IAAOM,gBACrB,iBACEF,MAAOV,yBADT,MAEEW,IAAI,yEAGR,mBAAKN,UAAWC,IAAOO,cACrB,mBAAKR,UAAWC,IAAOQ,UACrB,sBAFJ,+BAIE,mBAAKT,UAAWC,IAAOS,SAX3B,sRAmBE,mBAAKV,UAAWC,IAAOG,UACrB,iBACEC,MAAOV,yBADT,MAEEW,IAAI,6EASlB,iB,kcC9HA,2DAKMK,EAAc,SAACC,GAAW,IACtBb,EAAWa,EADU,OAE7B,OACE,mBAAKZ,UAAWC,IAAOY,eACrB,kBAAIC,MAAO,CAAEC,YAAa,MACxB,kBAAID,MAAO,CAAEE,QAAQ,iBACnB,iBACEhB,UACED,oBACIE,IADJF,iBAEIE,IAJR,SAMEgB,GAAG,kBART,kBAaE,kBAAIH,MAAO,CAAEE,QAAQ,iBACnB,iBACEhB,UACED,kBACIE,IADJF,uBAEIE,IAJR,eAMEgB,GAAG,gBApBT,gBAyBE,kBAAIH,MAAO,CAAEE,QAAQ,iBACnB,iBACEhB,UACED,qBACIE,IADJF,iBAEIE,IAJR,SAMEgB,GAAG,mBAlCb,sBA4CF,W,2bClDAC,EAAOC,QAAU,CAAC,SAAW,yCAAyC,eAAiB,gDAAgD,iBAAmB,kDAAkD,uBAAyB,yDAAyD,kBAAoB,mDAAmD,cAAgB,8CAA8C,0BAA4B,8D,kCCD/b,iFAMA,SAASC,IACP,OACE,qBACE,iBAAKvB,MAAM,2DACX,qBACE,sBAJN,QAUF,iB,uaChBAqB,EAAOC,QAAU,CAAC,IAAM,mCAAmC,SAAW,yCAAyC,eAAiB,gDAAgD,aAAe,8CAA8C,SAAW,yCAAyC,QAAU,wCAAwC,cAAgB,iD,kCCDnW,4FAOME,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAErB,OADAC,+BAEE,mBAAKvB,UAAWC,IAAOuB,WACrB,mBAAKxB,UAAWC,IAAOJ,OADzB,uBAEE,mBAAKG,UAAWC,IAAOwB,gBAH3B,KAQFC,cAAmB,CACjBJ,SAAUK,SAAeC,YAG3B,W,2bCpBAV,EAAOC,QAAU,CAAC,UAAY,yCAAyC,MAAQ,qCAAqC,eAAiB","file":"component---src-pages-why-totalcross-js-3fcf3fefab0ea25f6f64.js","sourcesContent":["import React from \"react\";\nimport Img from \"gatsby-image\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport LayoutWhyTC from \"../components/layout-why-tc\";\nimport NavBarWhyTC from \"../components/navbar-why-tc\";\n\nimport styles from \"./low-footprint.module.scss\";\n\nconst LowFootprint = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      process: file(relativePath: { eq: \"src/imgs/process2.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 385, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      process_mobile: file(\n        relativePath: { eq: \"src/imgs/process_mobile.png\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 385, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      vmdiff: file(relativePath: { eq: \"src/imgs/vmdiff2.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 370, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  const ListLink = (props) => (\n    <li style={{ display: `inline-block` }}>\n      {props.middle ? (\n        <Link className={styles.menuItemMiddle} to={props.to}>\n          {props.children}\n        </Link>\n      ) : (\n        <Link className={styles.menuItem} to={props.to}>\n          {props.children}\n        </Link>\n      )}\n    </li>\n  );\n  return (\n    <Layout>\n      <SEO\n        title=\"Low Footprint with TotalCross\"\n        description=\"TotalCross greatly improves application footprint, making your solution lighter.\"\n      ></SEO>\n      <LayoutWhyTC>\n        <NavBarWhyTC active=\"Low Footprint\" />\n        <div className={styles.row}>\n          <div className={styles.rowTextCenter}>\n            TotalCross SDK has an innovative architecture to provide low\n            footprint Apps even with high level programming languages, due to\n            its bytecode and virtual machine.\n          </div>\n        </div>\n        <div className={styles.row}>\n          <div className={styles.rowImage}>\n            <Img\n              fluid={data.process.childImageSharp.fluid}\n              alt=\"Illustration of TotalCross Process\"\n            />\n          </div>\n          <div className={styles.rowImageMobile}>\n            <Img\n              fluid={data.process_mobile.childImageSharp.fluid}\n              alt=\"Illustration of TotalCross Process\"\n            />\n          </div>\n          <div className={styles.rowTextBlock}>\n            <div className={styles.rowTitle}>\n              <h1>TotalCross bytecode</h1>\n            </div>\n            <div className={styles.rowText}>\n              {\" \"}\n              Even coding with Java/Kotlin, TC SDK uses anything of these\n              languages on the device. The Java bytecode is converted to\n              TotalCross bytecode what is optimized. It has been created based\n              on performance statistical researches to identify the operations\n              that are frequently used and have more impact in performance.\n              These operations are compressed in order to reduce the assembly of\n              instructions and to provide low footprint.{\" \"}\n            </div>\n          </div>\n        </div>\n        <div className={styles.row}>\n          <div className={styles.rowImageMobile}>\n            <Img\n              fluid={data.vmdiff.childImageSharp.fluid}\n              alt=\"Illustration of the bytecode difference between TotalCross and Java\"\n            />\n          </div>\n          <div className={styles.rowTextBlock}>\n            <div className={styles.rowTitle}>\n              <h1>TotalCross Virtual Machine</h1>\n            </div>\n            <div className={styles.rowText}>\n              Instead of Java Virtual Machine (JVM), which is Stack based,\n              TotalCross Virtual Machine (TCVM) is Register based. In few words,\n              it means a simple addition operation, which loads 4 instructions\n              in JVM, it requires loading only instruction in TCVM, ensuring\n              high performance.\n            </div>\n          </div>\n          <div className={styles.rowImage}>\n            <Img\n              fluid={data.vmdiff.childImageSharp.fluid}\n              alt=\"Illustration of the bytecode difference between TotalCross and Java\"\n            />\n          </div>\n        </div>\n      </LayoutWhyTC>\n    </Layout>\n  );\n};\n\nexport default LowFootprint;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./navbar-why-tc.module.scss\";\n\nconst NavBarWhyTC = (props) => {\n  const { active } = props;\n  return (\n    <div className={styles.menuContainer}>\n      <ul style={{ paddingLeft: \"0\" }}>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Low Footprint\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/low-footprint\"\n          >\n            Low Footprint\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Easy to use\"\n                ? styles.menuItemMiddleSelected\n                : styles.menuItemMiddle\n            }\n            to=\"/easy-to-use\"\n          >\n            Easy to use\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Cross-Platform\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/cross-platform\"\n          >\n            Cross-Platform\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBarWhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"navbar-why-tc-module--menu-item--27QKg\",\"menuItemMiddle\":\"navbar-why-tc-module--menu-item-middle--2I6F1\",\"menuItemSelected\":\"navbar-why-tc-module--menu-item-selected--1Q92y\",\"menuItemMiddleSelected\":\"navbar-why-tc-module--menu-item-middle-selected--2XNcX\",\"menuItemContainer\":\"navbar-why-tc-module--menu-item-container--1BNMH\",\"menuContainer\":\"navbar-why-tc-module--menu-container--hVSrZ\",\"menuItemContainerSelected\":\"navbar-why-tc-module--menu-item-container-selected--2Iezd\"};","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport LayoutWhyTC from \"../components/layout-why-tc\";\nimport LowFootprint from \"./low-footprint\";\n\nfunction WhyTC() {\n  return (\n    <Layout>\n      <SEO title=\"Reasons to choose TotalCross for your embedded project\"></SEO>\n      <LayoutWhyTC>\n        <LowFootprint />\n      </LayoutWhyTC>\n    </Layout>\n  );\n}\n\nexport default WhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"low-footprint-module--row--3b3wU\",\"rowImage\":\"low-footprint-module--row-image--SsMcM\",\"rowImageMobile\":\"low-footprint-module--row-image-mobile--2ZASM\",\"rowTextBlock\":\"low-footprint-module--row-text-block--1lwDn\",\"rowTitle\":\"low-footprint-module--row-title--1YR8-\",\"rowText\":\"low-footprint-module--row-text--2ezGe\",\"rowTextCenter\":\"low-footprint-module--row-text-center--1Rj1S\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"./layout\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./layout-why-tc.module.scss\";\n\nconst LayoutWhyTC = ({ children }) => {\n  console.log(\"children ===>\", children);\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>So, why TotalCross?</div>\n      <div className={styles.childContainer}>{children}</div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LayoutWhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout-why-tc-module--container--2pvOB\",\"title\":\"layout-why-tc-module--title--3yN5c\",\"childContainer\":\"layout-why-tc-module--child-container--qdUn3\"};"],"sourceRoot":""}