{"version":3,"sources":["webpack:///./src/components/call-to-action.module.scss","webpack:///./src/pages/code-corona-label.module.scss","webpack:///./src/components/button.js","webpack:///./src/pages/code-corona-import.js","webpack:///./src/components/code-snippets/import-corona.js"],"names":["module","exports","TCButton","props","color","text","path","href","className","styles","buttonGreen","buttonBlack","CodeCoronaImport","container","code","button","ImportCorona","style"],"mappings":"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","file":"component---src-pages-code-corona-import-js-36619568831e7dc31663.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGreen\":\"call-to-action-module--button-green--1tcEk\",\"buttonBlack\":\"call-to-action-module--button-black--3WFHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"code-corona-label-module--container--2-Zom\",\"code\":\"code-corona-label-module--code--2K9bE\",\"button\":\"code-corona-label-module--button--3t74O\"};","import React from \"react\";\n\nimport styles from \"./call-to-action.module.scss\";\n\nconst TCButton = (props) => {\n  const { color, text, path } = props;\n  const btnStyle = () => {\n    switch (color) {\n      case \"green\":\n        return \"buttonGreen\";\n      case \"black\":\n        return \"buttonBlack\";\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <a href=\"\" href={path}>\n        {color === \"green\" ? (\n          <button className={styles.buttonGreen}>{text}</button>\n        ) : (\n          <button className={styles.buttonBlack}>{text}</button>\n        )}\n      </a>\n    </div>\n  );\n};\n\nexport default TCButton;\n","import React from \"react\";\nimport ImportCorona from \"../components/code-snippets/import-corona\";\nimport TCButton from \"../components/button\";\n\nimport styles from \"./code-corona-label.module.scss\";\n\nconst CodeCoronaImport = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.code}>\n        <ImportCorona />\n      </div>\n      <div className={styles.button}>\n        <TCButton color=\"black\" text=\"BACK\" path=\"/easy-to-use\" />\n      </div>\n    </div>\n  );\n};\n\nexport default CodeCoronaImport;\n","import React from \"react\";\n\nconst ImportCorona = () => {\n  return (\n    <pre>\n      <span style={{ color: \"orange\" }}>{`\n    private void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`fillData()`}</span>\n      {` {\n\n        confirmedList.clear();\n        recoveredList.clear();\n        deathsList.clear();\n        `}\n      <span style={{ color: \"grey\" }}>{`\n        // Getting the information and filling the lists used to fill the CoronaChart`}</span>\n      <span style={{ color: \"orange\" }}>{`\n        if `}</span>\n      {`(!offlineCheck.isChecked())\n            response = getCoronavirusData(\n              `}\n      <span\n        style={{ color: \"lightgreen\" }}\n      >{`\"https://coronavirus-map.p.rapidapi.com/v1/summary/latest\"`}</span>\n      {`, \n              HttpStream.`}\n      <span style={{ color: \"cornflowerblue\" }}>{`GET`}</span>\n      {`\n              );`}\n      <span style={{ color: \"orange\" }}>{`\n        else`}</span>\n      {`\n            response = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`JSONObject(`}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`String(Vm.getFile(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"request.json\"`}</span>\n      {`)));\n\n        JSONObject data = response.getJSONObject(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"data\"`}</span>\n      {`);\n        dates = data.names();\n        array = data.toJSONArray(dates);\n        `}\n      <span style={{ color: \"orange\" }}>{`for `}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`int `}</span>\n      {`i = `}\n      <span style={{ color: \"cornflowerblue\" }}>{`0`}</span>\n      {`; i < array.length(); i++) {\n            date = dates.getString(i);\n            item = array.getJSONObject(i);\n            MyDate myDate = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`MyDate(Integer.parseInt(Convert.remove(date, `}\n      <span style={{ color: \"lightgreen\" }}>{`\"-\"`}</span>\n      {`)));\n            confirmedList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"total_cases\"`}</span>\n      {`))\n              );\n            recoveredList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"recovered\"`}</span>\n      {`))\n              );\n            deathsList.add(`}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"deaths\"`}</span>\n      {`)));\n        }\n\n        `}\n      <span style={{ color: \"grey\" }}>{`// Sorts the data by date;`}</span>\n      {`\n        Collections.sort(confirmedList, `}\n      <span style={{ color: \"orange\" }}>{`new Comparator`}</span>\n      {`<`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer>>() {\n                `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(recoveredList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(deathsList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n    }\n    `}\n    </pre>\n  );\n};\n\nexport default ImportCorona;\n"],"sourceRoot":""}