{"version":3,"sources":["webpack:///./src/components/navbar-why-tc.js","webpack:///./src/pages/easy-to-use.module.scss","webpack:///./src/pages/easy-to-use.js","webpack:///./src/components/code-snippets/title-corona.js","webpack:///./src/components/navbar-why-tc.module.scss","webpack:///./src/components/code-snippets/button-corona.js","webpack:///./src/components/layout-why-tc.js","webpack:///./src/components/layout-why-tc.module.scss","webpack:///./src/components/code-snippets/import-corona.js","webpack:///./src/imgs/coronachart.gif"],"names":["NavBarWhyTC","props","active","className","styles","menuContainer","style","paddingLeft","display","to","module","exports","snGit","icon","faGithub","EasyToUse","title","description","container","rowTextCenter","rowTitle2","target","rel","href","GITHUB_CORONA","exampleText","src","alt","fitContainer","code","codeMobile","color","text","path","rowTitle","TitleCorona","ButtonCorona","LayoutWhyTC","children","console","childContainer","Layout","PropTypes","isRequired","ImportCorona"],"mappings":"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","file":"component---src-pages-easy-to-use-js-b5a96b512b5ebfb18b9b.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styles from \"./navbar-why-tc.module.scss\";\n\nconst NavBarWhyTC = (props) => {\n  const { active } = props;\n  return (\n    <div className={styles.menuContainer}>\n      <ul style={{ paddingLeft: \"0\" }}>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Low Footprint\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/low-footprint\"\n          >\n            Low Footprint\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Easy to use\"\n                ? styles.menuItemMiddleSelected\n                : styles.menuItemMiddle\n            }\n            to=\"/easy-to-use\"\n          >\n            Easy to use\n          </Link>\n        </li>\n        <li style={{ display: `inline-block` }}>\n          <Link\n            className={\n              active === \"Cross-Platform\"\n                ? styles.menuItemSelected\n                : styles.menuItem\n            }\n            to=\"/cross-platform\"\n          >\n            Cross-Platform\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBarWhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"easy-to-use-module--code--Z1OAc\",\"row\":\"easy-to-use-module--row--2y_N3\",\"rowImage\":\"easy-to-use-module--row-image--1zSMh\",\"image\":\"easy-to-use-module--image--2phs7\",\"fitContainer\":\"easy-to-use-module--fit-container--2LTXU\",\"rowTextBlock\":\"easy-to-use-module--row-text-block--24mMP\",\"rowTitle\":\"easy-to-use-module--row-title--1FNC3\",\"rowTitle2\":\"easy-to-use-module--row-title2--7IjXn\",\"rowText\":\"easy-to-use-module--row-text--nieCc\",\"codeMobile\":\"easy-to-use-module--code-mobile--3PXAf\",\"container\":\"easy-to-use-module--container--16cV3\",\"exampleText\":\"easy-to-use-module--example-text--z-ueO\",\"rowTextCenter\":\"easy-to-use-module--row-text-center--i8I9F\",\"icon\":\"easy-to-use-module--icon--1Us_f\"};","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport LayoutWhyTC from \"../components/layout-why-tc\";\nimport NavBarWhyTC from \"../components/navbar-why-tc\";\nimport coronaGIF from \"../imgs/coronachart.gif\";\nimport { GITHUB_CORONA } from \"../utils/links\";\nimport ImportCorona from \"../components/code-snippets/import-corona\";\nimport ButtonCorona from \"../components/code-snippets/button-corona\";\nimport TitleCorona from \"../components/code-snippets/title-corona\";\nimport TCButton from \"../components/button\";\n\nimport styles from \"./easy-to-use.module.scss\";\n\nconst snGit = <FontAwesomeIcon className={styles.icon} icon={faGithub} />;\nconst EasyToUse = () => {\n  return (\n    <Layout>\n      <SEO\n        title=\"What Makes TotalCross Easy to Use\"\n        description=\"Build great UIs with very few commands, coding in a high-level language. Save time and get your products to market faster! Code on your favorite IDE.\"\n      ></SEO>\n      <LayoutWhyTC>\n        <NavBarWhyTC active=\"Easy to use\" />\n\n        <div className={styles.container}>\n          <div className={styles.rowTextCenter}>\n            TotalCross Components allow for creation of great UIs with very few\n            commands. That means less development time for you.\n          </div>\n          <div className={styles.rowTitle2}>\n            <h2>\n              Corona Chart App Example{\" \"}\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={GITHUB_CORONA}>\n                {snGit}\n              </a>\n            </h2>\n          </div>\n          <div className={styles.exampleText}>\n            The Corona Chart App was coded with TotalCross. RapidAPI was used to\n            fetch data and send it to the chart. The chart itself was coded in\n            less than 150 lines while the whole app used 4 classes adding up to\n            less than 600 lines of code in total.\n          </div>\n          <img\n            src={coronaGIF}\n            alt=\"Corona Chart app\"\n            className={styles.fitContainer}\n          />\n          <div className={styles.exampleText}>\n            Here is a snippet of how the chart title was coded:\n          </div>\n          <div className={styles.code}>\n            <TitleCorona />\n          </div>\n          <div className={styles.codeMobile}>\n            <TCButton\n              color=\"black\"\n              text=\"Show code\"\n              path=\"/code-corona-label\"\n            />\n          </div>\n          <div className={styles.exampleText}>\n            The Start and Stop button code:\n          </div>\n          <div className={styles.code}>\n            <ButtonCorona />\n          </div>\n          <div className={styles.codeMobile}>\n            <TCButton\n              color=\"black\"\n              text=\"Show code\"\n              path=\"/code-corona-button\"\n            />\n          </div>\n          <div className={styles.exampleText}>\n            This is how data was added to the chart:\n          </div>\n          <div className={styles.code}>\n            <ImportCorona />\n          </div>\n          <div className={styles.codeMobile}>\n            <TCButton\n              color=\"black\"\n              text=\"Show code\"\n              path=\"/code-corona-import\"\n            />\n          </div>\n          <div className={styles.exampleText}>\n            Would you like to see more? Here is the project's{\" \"}\n            <a\n              href=\"https://github.com/TotalCross/CoronaChartApp\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              repository\n            </a>\n            .\n          </div>\n\n          <div className={styles.rowTitle}>\n            <h1>On your favorite IDE</h1>\n          </div>\n          <div className={styles.rowTextCenter}>\n            TotalCross SDK is compatible with any integrated development\n            environment (IDE) that supports Java, like VSCode, NetBeans,\n            Eclipse, and IntelliJ\n          </div>\n          <div className={styles.rowTitle}>\n            <h1>High Level Languages</h1>\n          </div>\n          <div className={styles.rowTextCenter}>\n            TotalCross uses NanoJava, a leaner version of Java, or more\n            precisely a subset of the language with 72% less classes than full\n            Java. You can also use a subset of Kotlin with TotalCross.\n          </div>\n        </div>\n      </LayoutWhyTC>\n    </Layout>\n  );\n};\n\nexport default EasyToUse;\n","import React from \"react\";\n\nconst TitleCorona = () => {\n  return (\n    <pre>\n      {``}\n      <span style={{ color: \"orange\" }}>{`\n    @Override\n    public void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`initUI()`}</span>\n      {` {\n        \n      (...) `}\n      <span style={{ color: \"grey\" }}>{`// Adding components to UI`}</span>\n      {`\n      Label lblTitle = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`Label(`}\n      <span\n        style={{ color: \"lightgreen\" }}\n      >{`\"Coronavirus (COVID-19) charts and stats\"`}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`CENTER`}</span>\n      {`);\n      lblTitle.setForeColor(Color.`}\n      <span style={{ color: \"cornflowerblue\" }}>{`WHITE `}</span>\n      {`);\n      lblTitle.setFont(Font.getFont(`}\n      <span style={{ color: \"cornflowerblue\" }}>{`true `}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`36 `}</span>\n      {`));\n      add(lblTitle, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`LEFT `}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`TOP `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`FILL`}</span>\n      {`, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`PREFERRED`}</span>\n      {`);\n        \n      (...)\n      \n    }`}\n    </pre>\n  );\n};\n\nexport default TitleCorona;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"navbar-why-tc-module--menu-item--27QKg\",\"menuItemMiddle\":\"navbar-why-tc-module--menu-item-middle--2I6F1\",\"menuItemSelected\":\"navbar-why-tc-module--menu-item-selected--1Q92y\",\"menuItemMiddleSelected\":\"navbar-why-tc-module--menu-item-middle-selected--2XNcX\",\"menuItemContainer\":\"navbar-why-tc-module--menu-item-container--1BNMH\",\"menuContainer\":\"navbar-why-tc-module--menu-container--hVSrZ\",\"menuItemContainerSelected\":\"navbar-why-tc-module--menu-item-container-selected--2Iezd\"};","import React from \"react\";\n\nconst ButtonCorona = () => {\n  return (\n    <pre>\n      {``}\n      <span style={{ color: \"orange\" }}>{`\n    @Override\n    public void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`initUI()`}</span>\n      {` {\n        \n      (...) `}\n      <span style={{ color: \"grey\" }}>{`// Adding components to UI`}</span>\n      {`\n\n      Button btnStartStop = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`Button(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n      `}\n      <span\n        style={{ color: \"grey\" }}\n      >{`// Adding listener to start or stop the animation`}</span>\n      {`\n      btnStartStop.addPressListener(e `}\n      <span style={{ color: \"orange\" }}>{`-> `}</span>\n      {`{\n        `}\n      <span style={{ color: \"orange\" }}>{`if `}</span>\n      {` (btnStartStop.getText().equals(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`)) {\n          restartAnimation();\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Stop\"`}</span>\n      {`);\n        } `}\n      <span style={{ color: \"orange\" }}>{`else `}</span>\n      {`{\n          MainWindow.getMainWindow().removeUpdateListener(updateListener);\n          btnStartStop.setText(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"Start\"`}</span>\n      {`);\n        }\n      });\n\n      (...)\n\n      add(btnStartStop, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`LEFT `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH, `}\n      <span style={{ color: \"cornflowerblue\" }}>{`AFTER `}</span>\n      {`+ `}\n      <span style={{ color: \"cornflowerblue\" }}>{`this`}</span>\n      {`.fmH);\n        \n      (...)\n      \n    }`}\n    </pre>\n  );\n};\n\nexport default ButtonCorona;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"./layout\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"./layout-why-tc.module.scss\";\n\nconst LayoutWhyTC = ({ children }) => {\n  console.log(\"children ===>\", children);\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>So, why TotalCross?</div>\n      <div className={styles.childContainer}>{children}</div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LayoutWhyTC;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout-why-tc-module--container--2pvOB\",\"title\":\"layout-why-tc-module--title--3yN5c\",\"childContainer\":\"layout-why-tc-module--child-container--qdUn3\"};","import React from \"react\";\n\nconst ImportCorona = () => {\n  return (\n    <pre>\n      <span style={{ color: \"orange\" }}>{`\n    private void `}</span>\n      <span style={{ color: \"cornsilk\" }}>{`fillData()`}</span>\n      {` {\n\n        confirmedList.clear();\n        recoveredList.clear();\n        deathsList.clear();\n        `}\n      <span style={{ color: \"grey\" }}>{`\n        // Getting the information and filling the lists used to fill the CoronaChart`}</span>\n      <span style={{ color: \"orange\" }}>{`\n        if `}</span>\n      {`(!offlineCheck.isChecked())\n            response = getCoronavirusData(\n              `}\n      <span\n        style={{ color: \"lightgreen\" }}\n      >{`\"https://coronavirus-map.p.rapidapi.com/v1/summary/latest\"`}</span>\n      {`, \n              HttpStream.`}\n      <span style={{ color: \"cornflowerblue\" }}>{`GET`}</span>\n      {`\n              );`}\n      <span style={{ color: \"orange\" }}>{`\n        else`}</span>\n      {`\n            response = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`JSONObject(`}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`String(Vm.getFile(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"request.json\"`}</span>\n      {`)));\n\n        JSONObject data = response.getJSONObject(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"data\"`}</span>\n      {`);\n        dates = data.names();\n        array = data.toJSONArray(dates);\n        `}\n      <span style={{ color: \"orange\" }}>{`for `}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`int `}</span>\n      {`i = `}\n      <span style={{ color: \"cornflowerblue\" }}>{`0`}</span>\n      {`; i < array.length(); i++) {\n            date = dates.getString(i);\n            item = array.getJSONObject(i);\n            MyDate myDate = `}\n      <span style={{ color: \"orange\" }}>{`new `}</span>\n      {`MyDate(Integer.parseInt(Convert.remove(date, `}\n      <span style={{ color: \"lightgreen\" }}>{`\"-\"`}</span>\n      {`)));\n            confirmedList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"total_cases\"`}</span>\n      {`))\n              );\n            recoveredList.add(\n              `}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"recovered\"`}</span>\n      {`))\n              );\n            deathsList.add(`}\n      <span style={{ color: \"orange\" }}>{`new Data`}</span>\n      {`<MyDate, Integer>(myDate, item.getInt(`}\n      <span style={{ color: \"lightgreen\" }}>{`\"deaths\"`}</span>\n      {`)));\n        }\n\n        `}\n      <span style={{ color: \"grey\" }}>{`// Sorts the data by date;`}</span>\n      {`\n        Collections.sort(confirmedList, `}\n      <span style={{ color: \"orange\" }}>{`new Comparator`}</span>\n      {`<`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer>>() {\n                `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(recoveredList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n        Collections.sort(deathsList, new Comparator<Data<MyDate, Integer>>() {\n        `}\n      <span style={{ color: \"orange\" }}>{`\n            @Override\n            public int`}</span>\n      {` `}\n      <span style={{ color: \"cornsilk\" }}>{`compare`}</span>\n      {`(`}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o1`}</span>\n      {`, `}\n      <span style={{ color: \"orange\" }}>{`Data`}</span>\n      {`<MyDate, Integer> `}\n      <span style={{ color: \"plum\" }}>{`o2`}</span>\n      {`) {\n                `}\n      <span style={{ color: \"orange\" }}>{`return`}</span>\n      {` o1.x.compareTo(o2.x);\n            }\n        });\n    }\n    `}\n    </pre>\n  );\n};\n\nexport default ImportCorona;\n","module.exports = __webpack_public_path__ + \"static/coronachart-f8352b7687518b3b3925797b01f1f269.gif\";"],"sourceRoot":""}